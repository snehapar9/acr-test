name: Build Test - SWA python - MCR 

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:      
        app:
          - python/django-app
          - python/flask-app
          - python/http-server-py
          - python/mssqlserver-sample
          - python/postgres-sample
          - python/shapely-flask-app
        versionString: 
          - "--platform python --platform-version 3.8"
          - "--platform python --platform-version 3.9"
          - "--platform python --platform-version 3.10"

    steps:
      - uses: actions/checkout@v3
        with:
          repository: microsoft/oryx
          ref: snehapar/Test-SWA-for-all-platforms
      # - uses: actions/cache@v3
      #   with:
      #    path: |
      #     .cache/go-build
      #     go/pkg/mod
      #    key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      #    restore-keys: |
      #      ${{ runner.os }}-go-    
      - name: Install Azure-cli
        uses: elstudio/action-install-azure-cli@v1
      - name: Log into registry
        uses: azure/login@v1
        with:
         creds: '${{ secrets.AZURE_CREDENTIALS }}'
      - name: Log in to Azure Container Registry
        uses: docker/login-action@v2.0.0
        with: 
         registry: jamstacktest.azurecr.io
         username: ${{ secrets.AZURE_CLIENT_ID }}
         password: ${{ secrets.AZURE_CLIENT_SECRET }}   
      # - uses: int128/docker-build-cache-config-action@v1
      #   id: cache
      #   with:
      #     image: ghcr.io/${{ github.repository }}/cache
      # - uses: docker/build-push-action@v2
      #   id: build
      #   with:
      #     cache-from: ${{ steps.cache.outputs.cache-from }}
      #     cache-to: ${{ steps.cache.outputs.cache-to }}

      # - name: Build application - pre-bake node + python dependecies
      #   run: docker run --rm -v $(pwd)/tests/SampleApps/${{ matrix.app }}:/app jamstacktest.azurecr.io/oryx/build:azfunc-jamstack-debian-bullseye-Install-libedit oryx build /app 
      # - name: Build application - pre-bake node + python dependecies - pre-bake python + yarn
      #   run: docker run --rm -v $(pwd)/tests/SampleApps/${{ matrix.app }}:/app jamstacktest.azurecr.io/oryx/build:Fix-sytax-errors oryx build /app 
      # - name: Build application - pre-bake node + python dependecies - pre-bake python + yarn + node
      #   run: docker run --rm -v $(pwd)/tests/SampleApps/${{ matrix.app }}:/app jamstacktest.azurecr.io/oryx/build:Pre-bake-node oryx build /app ${{ matrix.versionString }} --debug   
      - name: Build application - jamstack-bullseye-20221103.1
        run: docker run --rm -v $(pwd)/tests/SampleApps/${{ matrix.app }}:/app mcr.microsoft.com/oryx/build:azfunc-jamstack-debian-bullseye-20221103.1 oryx build /app ${{ matrix.versionString }} --debug
      # - name: Build application - jamstack-bullseye
      #   run: docker run --rm -v $(pwd)/tests/SampleApps/${{ matrix.app }}:/app mcr.microsoft.com/oryx/build:azfunc-jamstack-debian-bullseye-20221214.1 oryx build /app    
      # - name: Build application - cli-bullseye
      #   run: docker run --rm -v $(pwd)/tests/SampleApps/${{ matrix.app }}:/app jamstacktest.azurecr.io/oryx/cli-bullseye:v2 oryx build /app
      # - name: Build application - jamstack-bullseye
      #   run: docker run --rm -v $(pwd)/tests/SampleApps/${{ matrix.app }}:/app mcr.microsoft.com/oryx/build:azfunc-jamstack-debian-bullseye-20221214.1 oryx build /app
      # - name: Build application - buildpack-deps-bullseye
      #   run: docker run --rm -v $(pwd)/tests/SampleApps/${{ matrix.app }}:/app jamstacktest.azurecr.io/samples:buildpack-deps-bullseye oryx build /app
      # - name: Build application - buildpack-deps-bullseye-scm
      #   run: docker run --rm -v $(pwd)/tests/SampleApps/${{ matrix.app }}:/app jamstacktest.azurecr.io/samples:buildpack-deps-bullseye-scm oryx build /app  
      # - name: Build application - buildpack-deps-bullseye-curl
      #   run: docker run --rm -v $(pwd)/tests/SampleApps/${{ matrix.app }}:/app jamstacktest.azurecr.io/samples:buildpack-deps-bullseye-curl oryx build /app   
      # - name: Pull docker image
      #   run: docker pull jamstacktest.azurecr.io/oryx/jamstack:azfunc-jamstack-debian-bullseye  

      # - name: Build application - cli-bullseye
      #   run: docker run --rm -v $(pwd)/tests/SampleApps/${{ matrix.app }}:/app jamstacktest.azurecr.io/oryx/cli-bullseye:v2 oryx build /app